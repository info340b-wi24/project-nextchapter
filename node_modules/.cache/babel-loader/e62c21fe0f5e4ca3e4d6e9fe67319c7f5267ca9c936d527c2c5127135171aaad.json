{"ast":null,"code":"var _jsxFileName = \"C:\\\\repo\\\\info340-repos\\\\project-nextchapter\\\\my-app\\\\src\\\\components\\\\QuizPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport QuizComponent from './QuizComponent';\nimport QuizComponent2 from './QuizComponent2';\nimport QuizComponent3 from './QuizComponent3';\nimport QuizResults from './QuizResults';\nimport booksData from '../data/books.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction QuizPage() {\n  _s();\n  const [answers, setAnswers] = useState({\n    genre: '',\n    condition: '',\n    type: ''\n  });\n\n  // Handlers to update the state with each answer\n  const handleGenreSelect = genre => {\n    setAnswers(prev => ({\n      ...prev,\n      genre\n    }));\n  };\n  const handleConditionSelect = condition => {\n    setAnswers(prev => ({\n      ...prev,\n      condition\n    }));\n  };\n  const handleTypeSelect = type => {\n    setAnswers(prev => ({\n      ...prev,\n      type\n    }));\n  };\n\n  // Filter books based on answers\n  const filteredBooks = booksData.books.filter(book => {\n    // Add your filtering logic here based on the genre, condition, and type\n    // For example:\n    return book.genre.toLowerCase() === answers.genre.toLowerCase();\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(QuizComponent, {\n      onGenreSelect: handleGenreSelect\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(QuizComponent2, {\n      onConditionSelect: handleConditionSelect\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(QuizComponent3, {\n      onTypeSelect: handleTypeSelect\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n_s(QuizPage, \"JS0kaLGazy8SaxW7pm949J7Jj/8=\");\n_c = QuizPage;\nexport default QuizPage;\nvar _c;\n$RefreshReg$(_c, \"QuizPage\");","map":{"version":3,"names":["React","useState","QuizComponent","QuizComponent2","QuizComponent3","QuizResults","booksData","jsxDEV","_jsxDEV","QuizPage","_s","answers","setAnswers","genre","condition","type","handleGenreSelect","prev","handleConditionSelect","handleTypeSelect","filteredBooks","books","filter","book","toLowerCase","children","onGenreSelect","fileName","_jsxFileName","lineNumber","columnNumber","onConditionSelect","onTypeSelect","_c","$RefreshReg$"],"sources":["C:/repo/info340-repos/project-nextchapter/my-app/src/components/QuizPage.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport QuizComponent from './QuizComponent';\r\nimport QuizComponent2 from './QuizComponent2';\r\nimport QuizComponent3 from './QuizComponent3';\r\nimport QuizResults from './QuizResults';\r\nimport booksData from '../data/books.json';\r\n\r\nfunction QuizPage() {\r\n  const [answers, setAnswers] = useState({\r\n    genre: '',\r\n    condition: '',\r\n    type: ''\r\n  });\r\n\r\n  // Handlers to update the state with each answer\r\n  const handleGenreSelect = (genre) => {\r\n    setAnswers((prev) => ({ ...prev, genre }));\r\n  };\r\n\r\n  const handleConditionSelect = (condition) => {\r\n    setAnswers((prev) => ({ ...prev, condition }));\r\n  };\r\n\r\n  const handleTypeSelect = (type) => {\r\n    setAnswers((prev) => ({ ...prev, type }));\r\n  };\r\n\r\n  // Filter books based on answers\r\n  const filteredBooks = booksData.books.filter((book) => {\r\n    // Add your filtering logic here based on the genre, condition, and type\r\n    // For example:\r\n    return book.genre.toLowerCase() === answers.genre.toLowerCase();\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <QuizComponent onGenreSelect={handleGenreSelect}/>\r\n      <QuizComponent2 onConditionSelect={handleConditionSelect} />\r\n      <QuizComponent3 onTypeSelect={handleTypeSelect} />\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n\r\nexport default QuizPage;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,aAAa,MAAM,iBAAiB;AAC3C,OAAOC,cAAc,MAAM,kBAAkB;AAC7C,OAAOC,cAAc,MAAM,kBAAkB;AAC7C,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAOC,SAAS,MAAM,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3C,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAClB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC;IACrCY,KAAK,EAAE,EAAE;IACTC,SAAS,EAAE,EAAE;IACbC,IAAI,EAAE;EACR,CAAC,CAAC;;EAEF;EACA,MAAMC,iBAAiB,GAAIH,KAAK,IAAK;IACnCD,UAAU,CAAEK,IAAI,KAAM;MAAE,GAAGA,IAAI;MAAEJ;IAAM,CAAC,CAAC,CAAC;EAC5C,CAAC;EAED,MAAMK,qBAAqB,GAAIJ,SAAS,IAAK;IAC3CF,UAAU,CAAEK,IAAI,KAAM;MAAE,GAAGA,IAAI;MAAEH;IAAU,CAAC,CAAC,CAAC;EAChD,CAAC;EAED,MAAMK,gBAAgB,GAAIJ,IAAI,IAAK;IACjCH,UAAU,CAAEK,IAAI,KAAM;MAAE,GAAGA,IAAI;MAAEF;IAAK,CAAC,CAAC,CAAC;EAC3C,CAAC;;EAED;EACA,MAAMK,aAAa,GAAGd,SAAS,CAACe,KAAK,CAACC,MAAM,CAAEC,IAAI,IAAK;IACrD;IACA;IACA,OAAOA,IAAI,CAACV,KAAK,CAACW,WAAW,CAAC,CAAC,KAAKb,OAAO,CAACE,KAAK,CAACW,WAAW,CAAC,CAAC;EACjE,CAAC,CAAC;EAEF,oBACEhB,OAAA;IAAAiB,QAAA,gBACEjB,OAAA,CAACN,aAAa;MAACwB,aAAa,EAAEV;IAAkB;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eAClDtB,OAAA,CAACL,cAAc;MAAC4B,iBAAiB,EAAEb;IAAsB;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC5DtB,OAAA,CAACJ,cAAc;MAAC4B,YAAY,EAAEb;IAAiB;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC/C,CAAC;AAEV;AAACpB,EAAA,CAlCQD,QAAQ;AAAAwB,EAAA,GAARxB,QAAQ;AAsCjB,eAAeA,QAAQ;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}