{"ast":null,"code":"var _jsxFileName = \"C:\\\\repo\\\\info340-repos\\\\project-nextchapter\\\\my-app\\\\src\\\\components\\\\QuizResults.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { ref, get, getDatabase } from 'firebase/database';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction QuizResults() {\n  _s();\n  const location = useLocation();\n  const [books, setBooks] = useState([]);\n  // Retrieve the quiz selections from the location state\n  const {\n    selectedGenre,\n    selectedCondition,\n    selectedType\n  } = location.state || {};\n  useEffect(() => {\n    const db = getDatabase();\n    const booksRef = ref(db, 'UserData');\n\n    // Fetch data once instead of listening for changes\n    get(booksRef).then(snapshot => {\n      const data = snapshot.val();\n      if (data) {\n        const filteredBooks = Object.values(data).filter(book => book.Genre === selectedGenre && book.Condition === selectedCondition && book.CoverType === selectedType);\n        setBooks(filteredBooks);\n      } else {\n        setBooks([]);\n      }\n    }).catch(error => {\n      console.error(error);\n      setBooks([]);\n    });\n  }, [selectedGenre, selectedCondition, selectedType]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Our Recommendations for You\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), books.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No matching books found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"books-listed\",\n      children: books.map((book, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"item\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: book.Photo,\n            alt: `Cover of ${book.BookTitle}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: book.BookTitle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 15\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n_s(QuizResults, \"JR7Bw+yskznu1p7SF7U0+dALZ0E=\", false, function () {\n  return [useLocation];\n});\n_c = QuizResults;\nexport default QuizResults;\nvar _c;\n$RefreshReg$(_c, \"QuizResults\");","map":{"version":3,"names":["React","useState","useEffect","useLocation","ref","get","getDatabase","jsxDEV","_jsxDEV","QuizResults","_s","location","books","setBooks","selectedGenre","selectedCondition","selectedType","state","db","booksRef","then","snapshot","data","val","filteredBooks","Object","values","filter","book","Genre","Condition","CoverType","catch","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","length","className","map","index","src","Photo","alt","BookTitle","_c","$RefreshReg$"],"sources":["C:/repo/info340-repos/project-nextchapter/my-app/src/components/QuizResults.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\nimport { ref, get, getDatabase } from 'firebase/database';\r\n\r\nfunction QuizResults() {\r\n  const location = useLocation();\r\n  const [books, setBooks] = useState([]);\r\n  // Retrieve the quiz selections from the location state\r\n  const { selectedGenre, selectedCondition, selectedType } = location.state || {};\r\n\r\n  useEffect(() => {\r\n    const db = getDatabase();\r\n    const booksRef = ref(db, 'UserData');\r\n\r\n    // Fetch data once instead of listening for changes\r\n    get(booksRef).then((snapshot) => {\r\n      const data = snapshot.val();\r\n      if (data) {\r\n        const filteredBooks = Object.values(data).filter(book => (\r\n          book.Genre === selectedGenre &&\r\n          book.Condition === selectedCondition &&\r\n          book.CoverType === selectedType\r\n        ));\r\n        setBooks(filteredBooks);\r\n      } else {\r\n        setBooks([]);\r\n      }\r\n    }).catch((error) => {\r\n      console.error(error);\r\n      setBooks([]);\r\n    });\r\n  }, [selectedGenre, selectedCondition, selectedType]);\r\n\r\n  return (\r\n    <div>\r\n      <h3>Our Recommendations for You</h3>\r\n      {books.length === 0 ? (\r\n        <p>No matching books found.</p>\r\n      ) : (\r\n        <div className=\"books-listed\">\r\n          {books.map((book, index) => (\r\n            <div key={index} className=\"item\">\r\n              <div className=\"card\">\r\n                <img src={book.Photo} alt={`Cover of ${book.BookTitle}`} />\r\n                <h3>{book.BookTitle}</h3>\r\n                {/* ... other book details */}\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default QuizResults;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}