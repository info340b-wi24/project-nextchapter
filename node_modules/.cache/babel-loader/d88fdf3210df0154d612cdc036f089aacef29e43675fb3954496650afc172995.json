{"ast":null,"code":"var _jsxFileName = \"C:\\\\repo\\\\info340-repos\\\\project-nextchapter\\\\my-app\\\\src\\\\components\\\\ParentQuiz.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport QuizComponent from './QuizComponent';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ParentQuiz(props) {\n  _s();\n  const [answers, setAnswers] = useState({\n    Genre: '',\n    Condition: '',\n    CoverType: ''\n  });\n  const navigate = useNavigate();\n  const handleCollectAnswers = (questionNumber, selectedOption) => {\n    const questionKeyMap = {\n      '1': 'Genre',\n      '2': 'Condition',\n      '3': 'CoverType'\n    };\n    const key = questionKeyMap[questionNumber];\n    setAnswers(prevAnswers => {\n      const updatedAnswers = {\n        ...prevAnswers,\n        [key]: selectedOption\n      };\n\n      // Lex Debug\n      console.log(\"Updated answers:\", updatedAnswers);\n      return updatedAnswers;\n    });\n  };\n  const handleSubmit = event => {\n    event.preventDefault();\n    const {\n      Genre: selectedGenre,\n      Condition: selectedCondition,\n      CoverType: selectedType\n    } = answers;\n    if (!selectedGenre || !selectedCondition || !selectedType) {\n      alert('Please answer all questions before submitting.');\n      return;\n    }\n    navigate('/quizresults', {\n      state: {\n        selectedGenre,\n        selectedCondition,\n        selectedType\n      }\n    });\n  };\n  const genreOptions = [{\n    value: 'Mystery',\n    label: 'Mystery'\n  }, {\n    value: 'Romance',\n    label: 'Romance'\n  }, {\n    value: 'Fiction',\n    label: 'Fiction'\n  }, {\n    value: 'Children',\n    label: 'Children'\n  }, {\n    value: 'Horror',\n    label: 'Horror'\n  }, {\n    value: 'Narrative',\n    label: 'Narrative'\n  }, {\n    value: 'Biography',\n    label: 'Biography'\n  }, {\n    value: 'Fairytale',\n    label: 'Fairytale'\n  }, {\n    value: 'Science',\n    label: 'Science'\n  }, {\n    value: 'Informative',\n    label: 'Informative'\n  }, {\n    value: 'Non-Fiction',\n    label: 'Non-fiction'\n  }, {\n    value: 'Poetry',\n    label: 'Poetry'\n  }];\n  const conditionOptions = [{\n    value: 'New',\n    label: 'New'\n  }, {\n    value: 'Like new',\n    label: 'Like New'\n  }, {\n    value: 'Good',\n    label: 'Good'\n  }, {\n    value: 'Acceptable',\n    label: 'Acceptable'\n  }];\n  const coverOptions = [{\n    value: 'Paperback',\n    label: 'Paperback'\n  }, {\n    value: 'Hardcover',\n    label: 'Hardcover'\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"page-title\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Find Your Next Book!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"quiz\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(QuizComponent, {\n          userData: props.userData,\n          questionNumber: 1,\n          questionText: \"What Kind of Genre Do You Like?\",\n          options: genreOptions,\n          onCollectAnswers: handleCollectAnswers\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(QuizComponent, {\n          userData: props.userData,\n          questionNumber: 2,\n          questionText: \"What Condition Do You Want Your Book In?\",\n          options: conditionOptions,\n          onCollectAnswers: handleCollectAnswers\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(QuizComponent, {\n          userData: props.userData,\n          questionNumber: 3,\n          questionText: \"Paperback or Hardcover?\",\n          options: coverOptions,\n          onCollectAnswers: handleCollectAnswers\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"submit\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n}\n_s(ParentQuiz, \"tNES8UW0Fk4O0fTWr4t91xj8W48=\", false, function () {\n  return [useNavigate];\n});\n_c = ParentQuiz;\nexport default ParentQuiz;\nvar _c;\n$RefreshReg$(_c, \"ParentQuiz\");","map":{"version":3,"names":["React","useState","useNavigate","QuizComponent","jsxDEV","_jsxDEV","ParentQuiz","props","_s","answers","setAnswers","Genre","Condition","CoverType","navigate","handleCollectAnswers","questionNumber","selectedOption","questionKeyMap","key","prevAnswers","updatedAnswers","console","log","handleSubmit","event","preventDefault","selectedGenre","selectedCondition","selectedType","alert","state","genreOptions","value","label","conditionOptions","coverOptions","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","userData","questionText","options","onCollectAnswers","type","_c","$RefreshReg$"],"sources":["C:/repo/info340-repos/project-nextchapter/my-app/src/components/ParentQuiz.js"],"sourcesContent":["import React, {useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport QuizComponent from './QuizComponent';\r\n\r\nfunction ParentQuiz(props) {\r\n    const [answers, setAnswers] = useState({\r\n        Genre: '',\r\n        Condition: '',\r\n        CoverType: ''\r\n      });\r\n      const navigate = useNavigate();\r\n    \r\n      const handleCollectAnswers = (questionNumber, selectedOption) => {\r\n        const questionKeyMap = {\r\n            '1': 'Genre',\r\n            '2': 'Condition',\r\n            '3': 'CoverType'\r\n          };\r\n        \r\n        const key = questionKeyMap[questionNumber];\r\n\r\n        setAnswers((prevAnswers) => {\r\n            const updatedAnswers = {\r\n                ...prevAnswers,\r\n                [key]: selectedOption\r\n              };\r\n          \r\n              // Lex Debug\r\n              console.log(\"Updated answers:\", updatedAnswers);\r\n          \r\n              return updatedAnswers;\r\n            });\r\n          };\r\n    \r\n          const handleSubmit = (event) => {\r\n            event.preventDefault();\r\n            \r\n            const { Genre: selectedGenre, Condition: selectedCondition, CoverType: selectedType } = answers;\r\n          \r\n            if (!selectedGenre || !selectedCondition || !selectedType) {\r\n              alert('Please answer all questions before submitting.');\r\n              return;\r\n            }\r\n            \r\n            navigate('/quizresults', { state: { selectedGenre, selectedCondition, selectedType } });\r\n          };\r\n    \r\n  const genreOptions = [\r\n    { value: 'Mystery', label: 'Mystery' },\r\n    { value: 'Romance', label: 'Romance' },\r\n    { value: 'Fiction', label: 'Fiction' },\r\n    { value: 'Children', label: 'Children' },\r\n    { value: 'Horror', label: 'Horror' },\r\n    { value: 'Narrative', label: 'Narrative' },\r\n    { value: 'Biography', label: 'Biography' },\r\n    { value: 'Fairytale', label: 'Fairytale' },\r\n    { value: 'Science', label: 'Science' },\r\n    { value: 'Informative', label: 'Informative' },\r\n    { value: 'Non-Fiction', label: 'Non-fiction' },\r\n    { value: 'Poetry', label: 'Poetry'}\r\n\r\n  ];\r\n\r\n  const conditionOptions = [\r\n    { value: 'New', label: 'New' },\r\n    { value: 'Like new', label: 'Like New' },\r\n    { value: 'Good', label: 'Good' },\r\n    { value: 'Acceptable', label: 'Acceptable' }\r\n  ];\r\n\r\n  const coverOptions = [\r\n    { value: 'Paperback', label: 'Paperback' },\r\n    { value: 'Hardcover', label: 'Hardcover' }\r\n  ];\r\n\r\n\r\n  return (\r\n    <div>\r\n      <header className=\"page-title\">\r\n        <h1>Find Your Next Book!</h1>\r\n      </header>\r\n\r\n      <section className=\"quiz\">\r\n        <form onSubmit={handleSubmit}>\r\n            <QuizComponent\r\n            userData={props.userData}\r\n            questionNumber={1}\r\n            questionText=\"What Kind of Genre Do You Like?\"\r\n            options={genreOptions}\r\n            onCollectAnswers={handleCollectAnswers}\r\n            />\r\n            <QuizComponent\r\n            userData={props.userData}\r\n            questionNumber={2}\r\n            questionText=\"What Condition Do You Want Your Book In?\"\r\n            options={conditionOptions}\r\n            onCollectAnswers={handleCollectAnswers}\r\n            />\r\n           <QuizComponent\r\n            userData={props.userData}\r\n            questionNumber={3}\r\n            questionText=\"Paperback or Hardcover?\"\r\n            options={coverOptions}\r\n            onCollectAnswers={handleCollectAnswers}\r\n            />  \r\n\r\n          <div className=\"submit\">\r\n            <button type=\"submit\">Submit</button>\r\n          </div>\r\n        </form>\r\n      </section>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ParentQuiz;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}